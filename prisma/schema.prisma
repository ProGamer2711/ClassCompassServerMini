generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model School {
    id   String @id @default(auto()) @map("_id") @db.ObjectId
    name String @unique

    classes  Class[]
    teachers Teacher[]

    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    deleted   Boolean   @default(false)
    deletedAt DateTime?
    // deletedBy String?
}

model Teacher {
    id   String @id @default(auto()) @map("_id") @db.ObjectId
    name String

    schoolId String @db.ObjectId
    school   School @relation(fields: [schoolId], references: [id])

    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    deleted   Boolean   @default(false)
    deletedAt DateTime?
    // deletedBy String?

    @@index([schoolId])
}

model Class {
    id   String @id @default(auto()) @map("_id") @db.ObjectId
    name String

    schoolId String @db.ObjectId
    school   School @relation(fields: [schoolId], references: [id])

    students Student[]

    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    deleted   Boolean   @default(false)
    deletedAt DateTime?
    // deletedBy String?

    // The class name should be unique within a school
    @@unique([schoolId, name])
    @@index([schoolId])
}

model Student {
    id   String @id @default(auto()) @map("_id") @db.ObjectId
    name String

    classId String @db.ObjectId
    class   Class  @relation(fields: [classId], references: [id])

    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    deleted   Boolean   @default(false)
    deletedAt DateTime?
    // deletedBy String?

    @@index([classId])
}
